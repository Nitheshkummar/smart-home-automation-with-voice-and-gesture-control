:root {
    --bg-color: #121212;
    --card-bg: #1e1e1e;
    --text-color: #e0e0e0;
    --accent-color: #8a2be2;
    --secondary-color: #646cff;
    --success-color: #42b883;
    --error-color: #ff5252;
}

body { 
    font-family: 'Poppins', sans-serif;
    background-color: var(--bg-color);
    color: var(--text-color);
    text-align: center;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    transition: all 0.3s ease;
    background-image: 
        radial-gradient(circle at 25% 15%, rgba(138, 43, 226, 0.05) 2%, transparent 12%),
        radial-gradient(circle at 75% 85%, rgba(100, 108, 255, 0.05) 2%, transparent 12%);
    background-size: 50px 50px;
}

.container {
    background-color: var(--card-bg);
    width: 90%;
    max-width: 600px;
    margin: 20px auto;
    padding: 30px;
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
}

.container::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        transparent 0%,
        rgba(138, 43, 226, 0.03) 50%,
        transparent 100%
    );
    animation: shimmer 8s linear infinite;
    z-index: 0;
}

.container > * {
    position: relative;
    z-index: 1;
}

@keyframes shimmer {
    0% { transform: translateX(-50%) translateY(-50%) rotate(0deg); }
    100% { transform: translateX(-50%) translateY(-50%) rotate(360deg); }
}

.container:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.6);
}

h2 {
    font-size: 2rem;
    margin-bottom: 30px;
    background: linear-gradient(45deg, var(--accent-color), var(--secondary-color));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: fadeIn 1s ease-in;
}

.controls {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 20px;
}

button {
    padding: 12px 24px;
    font-size: 16px;
    font-weight: bold;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    transition: all 0.3s ease;
    background: var(--card-bg);
    color: var(--text-color);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    position: relative;
    overflow: hidden;
}

button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
    border-radius: 50px;
}

button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
}

button:active {
    transform: translateY(0);
}

button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

#startRecord {
    border: 2px solid var(--success-color);
}

#startRecord::before {
    background: linear-gradient(45deg, #2ecc71, #42b883);
}

#startRecord:hover::before {
    opacity: 1;
}

#startRecord:hover {
    color: white;
}

#stopRecord {
    border: 2px solid var(--error-color);
}

#stopRecord::before {
    background: linear-gradient(45deg, #e74c3c, #ff5252);
}

#stopRecord:hover::before {
    opacity: 1;
}

#stopRecord:hover {
    color: white;
}

#status {
    color: #888;
    font-style: italic;
    margin: 10px 0;
    transition: color 0.3s ease;
}

.status-recording {
    color: var(--error-color) !important;
    animation: pulse 1.5s infinite;
}

.status-processing {
    color: var(--secondary-color) !important;
}

.status-complete {
    color: var(--success-color) !important;
}

#output {
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 20px;
    margin-top: 20px;
    font-size: 18px;
    line-height: 1.6;
    min-height: 100px;
    text-align: left;
    transition: all 0.3s ease;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2);
}

.visualizer {
    height: 60px;
    width: 100%;
    margin: 20px 0;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3px;
}

.bar {
    background: linear-gradient(to top, var(--accent-color), var(--secondary-color));
    width: 6px;
    height: 5px;
    border-radius: 2px;
    transition: height 0.1s ease;
}

@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-20px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes floatY {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

.animate__animated {
    animation-duration: 0.8s;
}

.wave {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100px;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%238a2be2" fill-opacity="0.1" d="M0,192L48,197.3C96,203,192,213,288,229.3C384,245,480,267,576,250.7C672,235,768,181,864,170.7C960,160,1056,192,1152,197.3C1248,203,1344,181,1392,170.7L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>');
    background-size: cover;
    background-repeat: no-repeat;
    z-index: -1;
    opacity: 0.6;
    animation: wave 10s ease-in-out infinite alternate;
}

@keyframes wave {
    0% { transform: translateY(0) rotate(0); }
    100% { transform: translateY(-10px) rotate(2deg); }
}

/* Add floating particles */
.particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
}

.particle {
    position: absolute;
    border-radius: 50%;
    opacity: 0.2;
    animation: float 8s infinite ease-in-out;
}

@keyframes float {
    0%, 100% { transform: translate(0, 0); }
    25% { transform: translate(10px, -10px); }
    50% { transform: translate(20px, 0px); }
    75% { transform: translate(10px, 10px); }
}